#归并排序的思

步骤：
1、建立一个虚拟头结点
2、比较两个链表中比较小的数字
3、将小的数字的链表所在的节点地址由这个合并的链表进行代替
4、两个链表中到最后肯定是有一个是空的 然后将这个链表整体放入这个新链表中


题解：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
    ListNode* dummy=new ListNode(-1);  //建立一个虚拟头结点
    ListNode* res=dummy;  // dummy需要被保留  因为后面直接返回dummy->next
    while(list1 && list2)                                   
    {   
        if(list1->val<=list2->val){
            res=res->next=list1;
            list1=list1->next;
        }
        else{
            res=res->next=list2;
            list2=list2->next;
        }
    }
    if(list1)
    {
        res->next=list1;
    }
    else{
        res->next=list2;
    }
    return dummy->next;  //此时可以直接返回dummy->next  也可以释放内存了
    }
};


